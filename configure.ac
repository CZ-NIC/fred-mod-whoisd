#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
# vim: set ts=4 sw=4:

AC_PREREQ(2.59)
AC_INIT([fred-mod-whoisd], 2.0, [], [fred-mod-whoisd])
AC_CONFIG_SRCDIR([mod_whoisd.c])
AC_CONFIG_MACRO_DIR([m4])

AC_DEFUN([AC_CREATE_CONTEXTOBJECTNAME],
[
 contextobjectname=$CONTEXTNAME
 if test "$contextobjectname" != ""; then
     contextobjectname="$contextobjectname."
 fi
 contextobjectname="$contextobjectname""$OBJECTNAME"
 AC_SUBST([CONTEXTOBJECTNAME], [$contextobjectname])
])

AH_TOP([#include "unconfig.h" /* why this? See comment in unconfig.h */])

# doxygen
DX_HTML_FEATURE(ON)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(OFF)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PDF_FEATURE(OFF)
DX_PS_FEATURE(OFF)
DX_INIT_DOXYGEN(fred-mod-whoisd, doxy.conf, [doc])

# init automake
AM_INIT_AUTOMAKE([-Wall -Werror])

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_EGREP
AC_PROG_AWK
AC_PROG_INSTALL
AM_PROG_LIBTOOL

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

# Check for orbit2
AM_PATH_ORBIT2([2.0.0],[],[AC_MSG_ERROR([missing orbit2 header files.])])
AX_PATH_ORBIT2_COSNAME()

# check apxs tool
AX_WITH_APXS([no],[${PATH}:/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin])
if test "$APXS" = "no"; then
    AC_MSG_ERROR([apxs executable does not exist (use --with-apxs)])
fi
# check for ap_release.h
# if present we have a apache 2.0.x and greater (in lower it's not included)
# syntax of \#define AP_SERVER_MAJORVERSION differ in minor versions
APXS_INCDIR="`${APXS} -q INCLUDEDIR`"
AC_CHECK_FILE([$APXS_INCDIR/ap_release.h],
              [AC_MSG_NOTICE([apache version >=2.0.x found])],
              [AC_MSG_ERROR([apache version >=2.0.x not found.])])

# check apr-config
AC_ARG_WITH([apr-config], [AC_HELP_STRING([[--with-apr-config]],
                          [location of apr-config executable])],
                          [apr_config="$with_val"],
                          [AC_PATH_PROGS([apr_config], 
                          [apr-config apr-0-config apr-1-config], [no],
                          [$PATH:/usr/sbin/:/usr/local/apache2/bin])])
if test "$APR_CONFIG" = "no"; then
    AC_MSG_ERROR([apr-config executable "$APR_CONFIG" does not exist (use --with-apr-config)])
fi
$apr_config --cppflags &> /dev/null
if test "$?" != "0"; then
    AC_MSG_ERROR([$apr_config is not valid apr-config executable])
fi

# set apache flags
APACHE_CFLAGS="-I`${APXS} -q INCLUDEDIR` -I`${apr_config} --includedir`"
APACHE_CPPFLAGS="`${apr_config} --cppflags`"
AC_SUBST(APACHE_CFLAGS)
AC_SUBST(APACHE_CPPFLAGS)

#set apache module path
#hack: replacing lib-part of dir with ${libdir} to support prefix install
APACHE_LEDIR=`${APXS} -q LIBEXECDIR`
APACHE_LIBEXECDIR=${libdir}${APACHE_LEDIR##${APACHE_LEDIR%/*/*}};
AC_SUBST(APACHE_LIBEXECDIR)

# check IDL dir
AC_ARG_WITH([idldir], [AS_HELP_STRING([--with-idldir],
                        [Directory with idl [/usr/share/idl/fred/]])],
                        [AC_SUBST([IDLDIR], [$withval])],
                        [AC_SUBST([IDLDIR], [/usr/local/share/idl/fred/])])

# check IDL file
AC_ARG_WITH([idl], [AS_HELP_STRING([--with-idl],
                        [location of idl file containing Whois interface [IDLDIR/Whois.idl]])],
                        [AC_SUBST([IDL], [$withval])],
                        [AC_SUBST([IDL], [$IDLDIR/Whois.idl])])
AC_CHECK_FILE([$IDL], [], [AC_MSG_ERROR(
                           [idl file "$IDL" does not exist (use --with-idl)])])

#whois port
AC_ARG_WITH([port], [AS_HELP_STRING([--with-port],
            [Port where mod_whoisd listen [43]])],
            [AC_SUBST([PORT], [$withval])],
            [AC_SUBST([PORT], [43])])

#nameservice host
AC_ARG_WITH([nshost], [AS_HELP_STRING([--with-nshost],
            [Location of CORBA nameservice host (host[:port]) [localhost]])],
            [AC_SUBST([NSHOST], [$withval])],
            [AC_SUBST([NSHOST], [localhost])])

#context name
AC_ARG_WITH([contextname], [AS_HELP_STRING([--with-contextname],
            [Object context []])],
            [AC_SUBST([CONTEXTNAME], [$withval])],
            [AC_SUBST([CONTEXTNAME], [""])])

#object name
AC_ARG_WITH([objectname], [AS_HELP_STRING([--with-objectname],
            [Name of object [WebWhois]])],
            [AC_SUBST([OBJECTNAME], [$withval])],
            [AC_SUBST([OBJECTNAME], [WebWhois])])

#object alias
AC_ARG_WITH([objectalias], [AS_HELP_STRING([--with-objectalias],
            [Object alias [Whois_alias]])],
            [AC_SUBST([OBJECTALIAS], [$withval])],
            [AC_SUBST([OBJECTALIAS], [Whois_alias])])

AC_CREATE_CONTEXTOBJECTNAME()

# determine prefix of files generated by idl compiler
idlprefix=`basename $IDL .idl`
AC_SUBST([IDLPREFIX], [$idlprefix])

# check svn revision (if available)
AC_SUBST([SVNREV], [unknown])
AC_MSG_NOTICE([trying to get svn revision])
AC_PATH_PROG([SVN], [svn], [false])
if test "$SVN" != "false"; then
	AC_CHECK_FILE([.svn], [AC_SUBST([SVNREV],
				  [`$SVN info | $EGREP Revision |  $AWK '{ print $2;};'`])])
	AC_MSG_CHECKING([SVN revision])
	AC_MSG_RESULT([$SVNREV])
else
	AC_MSG_CHECKING([SVN revision])
	AC_MSG_RESULT([$SVNREV])
fi
AC_DEFINE_UNQUOTED([SVN_REV], [["]$SVNREV["]], [SVN revision])

# finalization
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_FILES([Makefile
		 fred-mod-whoisd.spec
         conf/fred-mod-whoisd-apache.conf])
AC_OUTPUT
